{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/messages/notificationReducer.js","reducers/messages/errorReducer.js","services/login.js","reducers/loginReducer.js","store.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","blogReducer","state","action","type","map","b","likedBlog","notificationReducer","errorReducer","login","credentials","reduceUsers","reducer","combineReducers","errMessage","message","blogs","user","loginReducer","store","createStore","applyMiddleware","thunk","Login","props","onSubmit","handleLogin","username","password","Blogi","handleBlogi","title","author","url","likes","BlogToggle","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","onClick","className","openBlog","style","children","Blog","blog","addLike","removeBlog","userName","blogiUserName","blogTitle","showOrNot","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","connect","msg","errMsg","msgType","Togglable","React","forwardRef","toggleVisibility","useImperativeHandle","buttonLabel","useField","value","setValue","onChange","event","target","cleanField","mapDispatchToProps","logInUser","dispatch","loginService","window","localStorage","setItem","JSON","stringify","blogService","logOutUser","setUser","initializeBlogs","like","blogList","newLike","find","item","liked","notificationMessage","time","setTimeout","errorMessage","salasana","blogFormRef","createRef","useEffect","loggedUserJSON","getItem","parse","undefined","removeHandler","confirm","filter","exception","preventDefault","likeBlog","name","removeItem","current","blogObject","then","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6def273a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken,\r\n  removeToken,\r\n  remove\r\n\r\n}\r\n","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'BLOG':\r\n    return action.data\r\n  case 'LIKE':\r\n    return state.map(b => b.id !== action.data.id ? b : action.data.likedBlog)\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'BLOG',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const like = (blogList, blog) => {\r\n  const newLike = blog.likes + 1\r\n  const blogForLike = blogList.find(item => item.id === blog.id)\r\n  const likedBlog = {\r\n    ...blogForLike, likes: newLike\r\n  }\r\n  return async dispatch => {\r\n    const liked = await blogService.update(blog.id, likedBlog)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: {\r\n        likedBlog: liked,\r\n        id: liked.id\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default blogReducer","\r\n\r\nconst notificationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'MESSAGE':\r\n    return action.data\r\n  case 'ERR_MESSAGE':\r\n    return action.data\r\n  case 'CLEAR_MESSAGE':\r\n    return action.data\r\n  case 'DO':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const notificationMessage = (msg, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'MESSAGE',\r\n      data: msg\r\n    })\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_MESSAGE',\r\n        data: null      \r\n      })\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","const errorReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'ERR_MESSAGE':\r\n    return action.data\r\n  case 'CLEAR_MESSAGE':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (msg, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'ERR_MESSAGE',\r\n      data: msg\r\n    })\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_MESSAGE',\r\n        data: null\r\n      })\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport default errorReducer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\n\r\nimport blogService from '../services/blogs'\r\n\r\nconst reduceUsers = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'LOG_IN':\r\n    console.log('action data:', action.data)\r\n    return action.data\r\n  case 'LOG_OUT':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: 'LOG_IN',\r\n    data: user\r\n  }\r\n}\r\n\r\nexport const logInUser = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username: username,\r\n      password: password\r\n    })\r\n    window.localStorage.setItem(\r\n      'loggedBlogappUser', JSON.stringify(user)\r\n    )\r\n    blogService.setToken(user.token)\r\n    dispatch({\r\n      type: 'LOG_IN',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const logOutUser = () => {\r\n  return {\r\n    type: 'LOG_OUT',\r\n    data: null\r\n  }\r\n}\r\n\r\n\r\nexport default reduceUsers","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport notificationReducer from './reducers/messages/notificationReducer'\r\nimport errorReducer from './reducers/messages/errorReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\n\r\nconst reducer = combineReducers({\r\n  errMessage: errorReducer,\r\n  message: notificationReducer,\r\n  blogs: blogReducer,\r\n  user: loginReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleLogin}>\r\n        <h2>Log in to application:</h2>\r\n        <label>Username:<br/>\r\n          <input {...props.username}></input><br/>\r\n        </label>\r\n        <label>Password:<br/>\r\n          <input {...props.password}></input><br/>\r\n        </label><br></br>\r\n\r\n        <button type = \"submit\">Kirjaudu</button>\r\n      </form><br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleBlogi}>\r\n        <h2>Create new blog</h2>\r\n        <label>Title:<br/>\r\n          <input {...props.title}></input><br/>\r\n        </label>\r\n        <label>Author:<br/>\r\n          <input {...props.author}></input><br/>\r\n        </label>\r\n        <label>Url:<br/>\r\n          <input {...props.url}></input><br/>\r\n        </label>\r\n        <label>Likes:<br/>\r\n          <input {...props.likes}></input>\r\n        </label><br/><br/>\r\n        <button type = \"submit\">Create blog</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogi","import React, { useState } from 'react'\r\n\r\nconst BlogToggle = (props, ref) => {\r\n\r\n  const [ visible, setVisible ] = useState (false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div onClick = {toggleVisibility} className = 'show'> {props.openBlog}\r\n        <div style = {hideWhenVisible}></div>\r\n      </div>\r\n      <div style = {showWhenVisible} className = 'toggleContent'>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, addLike, removeBlog, userName, blogiUserName }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n\r\n  }\r\n\r\n  const blogTitle = <div>{blog.title} added by {blog.author}</div>\r\n\r\n  const showOrNot = { display: userName === blogiUserName ? '' : 'none' }\r\n  return(\r\n    <div style = {blogStyle} className = 'blogi'>\r\n      <BlogToggle openBlog = {blogTitle}>\r\n        <div>\r\n          <a href = {blog.url}>{blog.url}</a><br/>\r\n          {blog.likes} likes&nbsp;&nbsp;\r\n          <button onClick = {addLike}>Like</button><br/>\r\n          added by {blog.author}<br/><br/>\r\n          <div style = {showOrNot}>\r\n            <button onClick = {removeBlog}>Remove</button>\r\n          </div>\r\n        </div>\r\n      </BlogToggle>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func,\r\n  removeBlog: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  blogiUserName: PropTypes.string\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Notification = (props) => {\r\n  let msgType\r\n\r\n  const message = props.msg === null ?\r\n    props.errMsg : props.msg\r\n\r\n  if(props.errMsg !== null){\r\n    msgType = 'err'\r\n  }\r\n  else if(props.errMsg === null && props.msg !== null){\r\n    msgType = 'message'\r\n  }\r\n  else{\r\n    msgType = ''\r\n  }\r\n\r\n  return <div className = {msgType}>\r\n    {message}\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    msg: state.message,\r\n    errMsg: state.errMessage\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Notification)","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style = {hideWhenVisible}>\r\n        <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n        <button onClick = {toggleVisibility}>Cansel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const cleanField = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return{\r\n    type,\r\n    value,\r\n    onChange,\r\n    cleanField\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport blogService from './services/blogs'\r\nimport './index.css'\r\nimport Login from './components/loginForm'\r\nimport Blogi from './components/blogiForm'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\nimport { notificationMessage } from './reducers/messages/notificationReducer'\r\nimport { errorMessage } from './reducers/messages/errorReducer'\r\nimport { initializeBlogs, like } from './reducers/blogReducer'\r\nimport { logInUser, logOutUser, setUser } from './reducers/loginReducer'\r\nimport { useField } from './hooks'\r\n\r\nconst App = (props) => {\r\n  const username = useField('text')\r\n  const salasana = useField('password')\r\n  const title = useField('text')\r\n  const author = useField('text')\r\n  const url = useField('text')\r\n  const likes = useField('text')\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    props.initializeBlogs()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if(loggedUserJSON){\r\n      const user = JSON.parse(loggedUserJSON)\r\n      if(user !== undefined && user !== null){\r\n        props.setUser(user)\r\n        blogService.setToken(user.token)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const readBlogs = () => props.blogs.map(blog =>\r\n    <Blog\r\n      key = {blog.title}\r\n      blog = {blog}\r\n      userName = {props.user.username}\r\n      blogiUserName = {blog.user.username}\r\n      addLike = {() => addLike(blog)}\r\n\r\n      removeBlog = {() => removeHandler(blog)}\r\n    />\r\n  )\r\n\r\n  const removeHandler = (item) => {\r\n    try{\r\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\r\n        blogService.remove(item.id)\r\n        props.blogs.filter(blog => blog.id !== item.id)\r\n\r\n        props.notificationMessage(`Blog '${item.title}' is removed`, 5)\r\n      }\r\n    }catch(exception){\r\n      console.log('Error:', exception)\r\n    }\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try{\r\n      await props.logInUser(username.value, salasana.value)\r\n      props.notificationMessage('You are logged in succesfully', 5)\r\n    }catch(exception){\r\n      username.cleanField()\r\n      salasana.cleanField()\r\n\r\n      props.errorMessage('Wrong username or password!', 5)\r\n    }\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    blogFormRef.current.toggleVisibility()\r\n    const blogObject = {\r\n      title: title.value,\r\n      author: author.value,\r\n      url: url.value,\r\n      likes: likes.value\r\n    }\r\n\r\n    blogService\r\n      .create(blogObject)\r\n      .then(response => {\r\n        props.blogs.concat(response)\r\n        title.cleanField()\r\n        author.cleanField()\r\n        url.cleanField()\r\n        likes.cleanField()\r\n\r\n        props.notificationMessage(`New Blog '${blogObject.title}' is added`, 5)\r\n      })\r\n  }\r\n\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    blogService.removeToken()\r\n    props.logOutUser()\r\n  }\r\n\r\n  const addLike = (likeBlog) => {\r\n    props.like(props.blogs, likeBlog)\r\n    props.notificationMessage('You added like to the blog!', 5)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification\r\n\r\n      />\r\n      {\r\n        props.user === null\r\n          ?\r\n          <Login\r\n            handleLogin = {handleLogin}\r\n            username = {username}\r\n            password = {salasana}\r\n          />\r\n          :\r\n          <div>\r\n            <h1>Blogs</h1>\r\n            <p>\r\n              {props.user.name} logged in&nbsp;&nbsp;\r\n              <button onClick = {logOut}>Log out</button>\r\n            </p>\r\n            <Togglable buttonLabel = 'New blog' ref = {blogFormRef}>\r\n              <Blogi\r\n                handleBlogi = {addBlog}\r\n                title = {title}\r\n                author = {author}\r\n                url = {url}\r\n                likes = {likes}\r\n              />\r\n            </Togglable>\r\n            {readBlogs()}\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    blogs: state.blogs,\r\n    message: state.message,\r\n    errMessage: state.errMessage,\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logInUser,\r\n  logOutUser,\r\n  setUser,\r\n  initializeBlogs,\r\n  like,\r\n  notificationMessage,\r\n  errorMessage\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(App)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}