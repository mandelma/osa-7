{"version":3,"sources":["services/blogs.js","services/login.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","reducers/messages/notificationReducer.js","reducers/messages/errorReducer.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","login","credentials","Login","props","onSubmit","handleLogin","username","password","type","Blogi","handleBlogi","title","author","url","likes","BlogToggle","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","onClick","className","openBlog","style","children","Blog","blog","addLike","removeBlog","userName","blogiUserName","blogTitle","showOrNot","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","Notification","messType","msg","msgType","errMessage","message","Togglable","React","forwardRef","toggleVisibility","useImperativeHandle","buttonLabel","createMessage","notificationReducer","state","action","errorReducer","useField","value","setValue","onChange","event","target","cleanField","App","store","salasana","user","setUser","blogs","setBlogs","blogFormRef","createRef","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","removeHandler","item","confirm","filter","dispatch","setTimeout","preventDefault","loginService","setItem","stringify","like","newLike","find","b","updatedLike","blogi","updated","map","getState","name","removeItem","current","blogObject","concat","key","reducer","combineReducers","createStore","renderApp","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.54efb31b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken,\r\n  removeToken,\r\n  remove\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleLogin}>\r\n        <h2>Log in to application:</h2>\r\n        <label>Username:<br/>\r\n          <input {...props.username}></input><br/>\r\n        </label>\r\n        <label>Password:<br/>\r\n          <input {...props.password}></input><br/>\r\n        </label><br></br>\r\n\r\n        <button type = \"submit\">Kirjaudu</button>\r\n      </form><br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleBlogi}>\r\n        <h2>Create new blog</h2>\r\n        <label>Title:<br/>\r\n          <input {...props.title}></input><br/>\r\n        </label>\r\n        <label>Author:<br/>\r\n          <input {...props.author}></input><br/>\r\n        </label>\r\n        <label>Url:<br/>\r\n          <input {...props.url}></input><br/>\r\n        </label>\r\n        <label>Likes:<br/>\r\n          <input {...props.likes}></input>\r\n        </label><br/><br/>\r\n        <button type = \"submit\">Create blog</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogi","import React, { useState } from 'react'\r\n\r\nconst BlogToggle = (props, ref) => {\r\n\r\n  const [ visible, setVisible ] = useState (false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div onClick = {toggleVisibility} className = 'show'> {props.openBlog}\r\n        <div style = {hideWhenVisible}></div>\r\n      </div>\r\n      <div style = {showWhenVisible} className = 'toggleContent'>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, addLike, removeBlog, userName, blogiUserName }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n\r\n  }\r\n\r\n  const blogTitle = <div>{blog.title} added by {blog.author}</div>\r\n\r\n  const showOrNot = { display: userName === blogiUserName ? '' : 'none' }\r\n  return(\r\n    <div style = {blogStyle} className = 'blogi'>\r\n      <BlogToggle openBlog = {blogTitle}>\r\n        <div>\r\n          <a href = {blog.url}>{blog.url}</a><br/>\r\n          {blog.likes} likes&nbsp;&nbsp;\r\n          <button onClick = {addLike}>Like</button><br/>\r\n          added by {blog.author}<br/><br/>\r\n          <div style = {showOrNot}>\r\n            <button onClick = {removeBlog}>Remove</button>\r\n          </div>\r\n        </div>\r\n      </BlogToggle>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func,\r\n  removeBlog: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  blogiUserName: PropTypes.string\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({ msg,  msgType }) => {\r\n  let messType\r\n  /* if(msgType.message === null && msgType.errMesssage === null ){\r\n    messType = ''\r\n  } */\r\n  if(msgType.errMessage !== null){\r\n    //return null\r\n    messType = 'err'\r\n  }\r\n  else if(msgType.errMessage === null && msgType.message !== null){\r\n    messType = 'message'\r\n  }\r\n  else{\r\n    messType = ''\r\n  }\r\n  return <div className = {messType}>\r\n    {msg}\r\n  </div>\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style = {hideWhenVisible}>\r\n        <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n        <button onClick = {toggleVisibility}>Cansel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","\r\n\r\nconst notificationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'MESSAGE':\r\n    return action.data\r\n  case 'ERR_MESSAGE':\r\n    return action.data\r\n  case 'CLEAR_MESSAGE':\r\n    return null\r\n  case 'DO':\r\n    return action.data\r\n  case 'DEL_MESSAGE':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: 'MESSAGE',\r\n    data: msg\r\n  }\r\n}\r\n\r\nexport const errMessage = (errMsg) => {\r\n  return {\r\n    type: 'ERR_MESSAGE',\r\n    data: errMsg\r\n  }\r\n}\r\n\r\nexport const delMes = () => {\r\n  return {\r\n    type: 'DEL_MESSAGE'\r\n  }\r\n}\r\nexport default notificationReducer","const errorReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'ERR_MESSAGE':\r\n    return action.data\r\n  case 'CLEAR_MESSAGE':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const errMessage = (msg) => {\r\n  return {\r\n    type: 'ERR_MESSAGE',\r\n    data: msg\r\n  }\r\n}\r\n\r\nexport const clearError = () => {\r\n  return {\r\n    type: 'CLEAR_MESSAGE'\r\n  }\r\n}\r\n\r\nexport default errorReducer","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const cleanField = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return{\r\n    type,\r\n    value,\r\n    onChange,\r\n    cleanField\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\nimport Login from './components/loginForm'\nimport Blogi from './components/blogiForm'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport { createMessage, delMes } from './reducers/messages/notificationReducer'\nimport { errMessage, clearError } from './reducers/messages/errorReducer'\nimport { useField } from './hooks'\n\nconst App = (props) => {\n  const store = props.store\n\n  const username = useField('text')\n  const salasana = useField('password')\n\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n  const likes = useField('text')\n\n  const [user, setUser] = useState(null)\n  const [blogs, setBlogs] = useState([])\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll()\n      .then(response => setBlogs(response))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const readBlogs = () => blogs.map(blog =>\n    <Blog\n      key = {blog.title}\n      blog = {blog}\n      userName = {user.username}\n      blogiUserName = {blog.user.username}\n      addLike = {() => addLike(blog)}\n\n      removeBlog = {() => removeHandler(blog)}\n    />\n  )\n\n  const removeHandler = async (item) => {\n    try{\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\n        await blogService.remove(item.id)\n        setBlogs(blogs.filter(blog => blog.id !== item.id))\n\n        store.dispatch(createMessage(`blog '${item.title}' is removed`))\n        setTimeout(() => {\n          store.dispatch(delMes())\n        }, 5000)\n      }\n    }catch(exception){\n      console.log('Error:', exception)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username: username.value,\n        password: salasana.value\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      username.cleanField()\n      salasana.cleanField()\n      store.dispatch(createMessage('Log in was succesful!'))\n      setTimeout(() => {\n        store.dispatch(delMes())\n      }, 5000)\n    }catch(exception){\n      username.cleanField()\n      salasana.cleanField()\n\n      store.dispatch(errMessage('Wrong username or password!'))\n      setTimeout(() => {\n        store.dispatch(clearError())\n      }, 5000)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    blogFormRef.current.toggleVisibility()\n    const blogObject = {\n      title: title.value,\n      author: author.value,\n      url: url.value,\n      likes: likes.value\n    }\n\n    blogService\n      .create(blogObject)\n      .then(response => {\n        setBlogs(blogs.concat(response))\n        title.cleanField()\n        author.cleanField()\n        url.cleanField()\n        likes.cleanField()\n\n        store.dispatch(createMessage(`new Blog '${blogObject.title}' is added`))\n        setTimeout(() => {\n          store.dispatch(delMes())\n        }, 5000)\n\n      })\n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n    setUser(null)\n  }\n\n  const addLike = async (like) => {\n    const newLike = like.likes + 1\n    const blog = blogs.find(b => b.id === like.id)\n    const updatedLike = {\n      ...blog, likes: newLike\n    }\n\n    store.dispatch(createMessage('Like is added to blog'))\n    setTimeout(() => {\n      store.dispatch(delMes())\n    }, 5000)\n\n    const blogi = blogs.find(blog => blog.id === like.id)\n\n    try{\n      const updated = await blogService.update(blog.id, updatedLike)\n      blogi.likes = updated.likes\n      setBlogs(blogs.map(blog => blog.id === blogi.id ? blogi : blog))\n    }catch(exception){\n      console.log(exception)\n    }\n  }\n\n  return (\n\n\n\n    <div>\n      <Notification\n        msg = {store.getState().message === null ?\n          store.getState().errMessage : store.getState().message}\n        msgType = {store.getState()}\n      />\n\n      {\n        user === null\n          ?\n          <Login\n            handleLogin = {handleLogin}\n            username = {username}\n            password = {salasana}\n          />\n          :\n          <div>\n            <h1>Blogs osa-7 test</h1>\n            <p>\n              {user.name} logged in&nbsp;&nbsp;\n              <button onClick = {logOut}>Log out</button>\n            </p>\n            <Togglable buttonLabel = 'New blog' ref = {blogFormRef}>\n              <Blogi\n                handleBlogi = {addBlog}\n                title = {title}\n                author = {author}\n                url = {url}\n                likes = {likes}\n              />\n            </Togglable>\n            {readBlogs()}\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport App from './App'\nimport notificationReducer from './reducers/messages/notificationReducer'\nimport errorReducer from './reducers/messages/errorReducer'\n\nconst reducer = combineReducers({\n  message: notificationReducer,\n  errMessage: errorReducer\n})\n\nconst store = createStore(reducer)\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nconst renderApp = () => {\n  ReactDOM.render(<App store = {store}/>, document.getElementById('root'))\n}\n\nrenderApp()\nstore.subscribe(renderApp)"],"sourceRoot":""}