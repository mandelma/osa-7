{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/messages/notificationReducer.js","reducers/messages/errorReducer.js","services/login.js","reducers/loginReducer.js","services/users.js","reducers/userReducer.js","store.js","components/Togglable.js","components/blogiForm.js","components/pages/Blog.js","components/pages/Users.js","components/pages/loginForm.js","components/pages/UserBlogs.js","components/pages/Blogs.js","components/Menu.js","components/Notification.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","blogReducer","state","action","type","map","b","likedBlog","concat","filter","blog","notificationReducer","errorReducer","login","credentials","reduceUsers","userReducer","reducer","combineReducers","errMessage","message","blogs","user","loginReducer","users","store","createStore","applyMiddleware","thunk","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","Blogi","Form","onSubmit","handleBlogi","Group","Label","Control","title","author","url","likes","Button","variant","Blog","addBlog","blogFormRef","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","key","to","Users","Table","striped","bordered","hover","name","length","Login","handleLogin","username","password","UserBlogs","userId","blogForUser","find","Blogs","removeBlog","addLike","color","href","Menu","logOut","salasana","menuStyle","padding","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","exact","path","render","match","params","connect","msg","errMsg","msgType","useField","value","setValue","onChange","event","target","cleanField","mapDispatchToProps","logInUser","dispatch","loginService","window","localStorage","setItem","JSON","stringify","blogService","logOutUser","setUser","initializeBlogs","initializeUsers","userService","like","blogList","newLike","item","liked","addNewBlog","newBlog","added","notificationMessage","time","setTimeout","errorMessage","createRef","useEffect","loggedUserJSON","getItem","parse","undefined","preventDefault","current","blogObject","removeItem","likeBlog","confirm","exception","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c0e3524.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken,\r\n  removeToken,\r\n  remove\r\n\r\n}\r\n","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'BLOG':\r\n    return action.data\r\n  case 'LIKE':\r\n    return state.map(b => b.id !== action.data.id ? b : action.data.likedBlog)\r\n  case 'ADD_NEW':\r\n    return state.concat(action.data)\r\n  case 'REMOVE':\r\n    return state.filter(blog => blog.id !== action.data)\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'BLOG',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const like = (blogList, blog) => {\r\n  const newLike = blog.likes + 1\r\n  const blogForLike = blogList.find(item => item.id === blog.id)\r\n  const likedBlog = {\r\n    ...blogForLike, likes: newLike\r\n  }\r\n  return async dispatch => {\r\n    const liked = await blogService.update(blog.id, likedBlog)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: {\r\n        likedBlog: liked,\r\n        id: liked.id\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const addNewBlog = (newBlog) => {\r\n  return async dispatch => {\r\n    const added = await blogService.create(newBlog)\r\n    dispatch({\r\n      type: 'ADD_NEW',\r\n      data: added\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeBlog = (blog) => {\r\n  return async dispatch => {\r\n    await blogService.remove(blog.id)\r\n    dispatch({\r\n      type: 'REMOVE',\r\n      data: blog.id\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default blogReducer","\r\n\r\nconst notificationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'MESSAGE':\r\n    return action.data\r\n  case 'ERR_MESSAGE':\r\n    return action.data\r\n  case 'CLEAR_MESSAGE':\r\n    return action.data\r\n  case 'DO':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const notificationMessage = (msg, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'MESSAGE',\r\n      data: msg\r\n    })\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_MESSAGE',\r\n        data: null      \r\n      })\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","const errorReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'ERR_MESSAGE':\r\n    return action.data\r\n  case 'CLEAR_MESSAGE':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const errorMessage = (msg, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'ERR_MESSAGE',\r\n      data: msg\r\n    })\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_MESSAGE',\r\n        data: null\r\n      })\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport default errorReducer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\n\r\nimport blogService from '../services/blogs'\r\n\r\nconst reduceUsers = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'LOG_IN':\r\n    return action.data\r\n  case 'LOG_OUT':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: 'LOG_IN',\r\n    data: user\r\n  }\r\n}\r\n\r\nexport const logInUser = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username: username,\r\n      password: password\r\n    })\r\n    window.localStorage.setItem(\r\n      'loggedBlogappUser', JSON.stringify(user)\r\n    )\r\n\r\n    blogService.setToken(user.token)\r\n    dispatch({\r\n      type: 'LOG_IN',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const logOutUser = () => {\r\n  return {\r\n    type: 'LOG_OUT',\r\n    data: null\r\n  }\r\n}\r\n\r\n\r\nexport default reduceUsers","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import userService from '../services/users'\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type){\r\n  case 'GET_USERS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll()\r\n    dispatch({\r\n      type: 'GET_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport notificationReducer from './reducers/messages/notificationReducer'\r\nimport errorReducer from './reducers/messages/errorReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  errMessage: errorReducer,\r\n  message: notificationReducer,\r\n  blogs: blogReducer,\r\n  user: loginReducer,\r\n  users: userReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style = {hideWhenVisible}>\r\n        <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n        <button onClick = {toggleVisibility}>Cansel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Blogi = (props) => {\r\n  return(\r\n    <div>\r\n      <h2>Create new blog</h2>\r\n      <Form onSubmit = {props.handleBlogi}>\r\n        <Form.Group>\r\n          <Form.Label>Title:</Form.Label>\r\n          <Form.Control {...props.title} />\r\n          <Form.Label>Author:</Form.Label>\r\n          <Form.Control {...props.author} />\r\n          <Form.Label>Url:</Form.Label>\r\n          <Form.Control {...props.url} />\r\n          <Form.Label>Likes:</Form.Label>\r\n          <Form.Control {...props.likes} /><br/>\r\n          <Button variant = 'primary' type = 'submit'>\r\n            Create Blog\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogi","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Togglable from '../Togglable'\r\nimport Blogi from '../blogiForm'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blog = ({ blogs , addBlog, title, author, url, likes, blogFormRef }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  //const showOrNot = { display: userName === blogiUserName ? '' : 'none' }\r\n\r\n  return(\r\n    <div className = 'blogi'>\r\n      <Togglable buttonLabel = 'New blog' ref = {blogFormRef}>\r\n        <Blogi\r\n          handleBlogi = {addBlog}\r\n          title = {title}\r\n          author = {author}\r\n          url = {url}\r\n          likes = {likes}\r\n        />\r\n      </Togglable><br/>\r\n      <div>\r\n        {blogs.map(blog =>\r\n          <div style = {blogStyle} key = {blog.id}>\r\n            <Link to = {`blogs/${blog.id}`}>\r\n              {blog.title}\r\n            </Link>\r\n          </div>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func,\r\n  removeBlog: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  blogiUserName: PropTypes.string\r\n}\r\n\r\n\r\nexport default Blog","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Users = ({ users }) => {\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <td>users</td>\r\n            <td>blogs created</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user =>\r\n            <tr key = {user.id}>\r\n              <td>\r\n                <Link to = {`users/${user.id}`}>{user.name}</Link>\r\n              </td>\r\n              <td>\r\n                {user.blogs.length}\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst Login = (props) => {\r\n  if(props.user === null){\r\n    return(\r\n      <div>\r\n        <h2>Log in to application:</h2>\r\n        <Form onSubmit = {props.handleLogin}>\r\n          <Form.Group>\r\n            <Form.Label>Username:</Form.Label>\r\n            <Form.Control {...props.username} />\r\n            <Form.Label>Password:</Form.Label>\r\n            <Form.Control {...props.password} /><br/>\r\n            <Button variant = 'primary' type = \"submit\">Kirjaudu</Button>\r\n          </Form.Group>\r\n        </Form><br/>\r\n      </div>\r\n    )\r\n  }\r\n  return(\r\n    <Redirect to = '/' />\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst UserBlogs = ({  userId, blogs, user, users }) => {\r\n  const blogForUser = users.find(user => user.id === userId)\r\n  return (\r\n    <div>\r\n      <h2>{blogForUser.name}</h2>\r\n      <p>Added blogs</p>\r\n      <ul>\r\n        {blogs.map(blog =>\r\n          blog.user.id === userId ?\r\n            <li key = {blog.id}>\r\n              {blog.title}\r\n            </li>\r\n            : null\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserBlogs","import React from 'react'\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\nconst Blogs = ({ blogs, removeBlog, addLike, id, user }) => {\r\n  if(user === null){\r\n    return (\r\n      <Redirect to = '/login' />\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      {blogs.map(blog => blog.id === id ?\r\n        <div key = {blog.id}>\r\n          <h3 style = {{ color: 'green' }}><bold>{blog.title}</bold></h3><br/>\r\n          <p><a href = {blog.url}>{blog.url}</a></p><br/>\r\n          <div>\r\n            {blog.likes} likes&nbsp;&nbsp;\r\n            <button onClick = {() => addLike(blog)}>Like</button>\r\n          </div>     <br/>\r\n          <p>added by {blog.author}</p><br/><br/>\r\n          {blog.user.username === user.username ? <button onClick = {() => removeBlog(blog)}>Remove</button> : null}\r\n        </div>\r\n        : null\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport Blog from './pages/Blog'\r\nimport Users from './pages/Users'\r\nimport Login from './pages/loginForm'\r\nimport UserBlogs from './pages/UserBlogs'\r\nimport Blogs from './pages/Blogs'\r\nimport {\r\n  BrowserRouter as Router, Route, Link\r\n} from 'react-router-dom'\r\nimport { Navbar } from 'react-bootstrap'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nconst Menu = ({ user, blogs, users, logOut, addLike, removeBlog, addBlog,\r\n  title, author, url, likes, handleLogin, username, salasana, blogFormRef }) => {\r\n  const menuStyle = { padding: 10 }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <Navbar collapseOnSelect expand = 'lg' bg = 'dark' variant = 'dark'>\r\n            <Navbar.Toggle aria-controls = 'rewsoinsive-navbar-nav' />\r\n            <Navbar.Collapse id = 'responsive-navbar-nav'>\r\n              <Nav className = 'mr-auto'>\r\n                <Nav.Link href = '#' as = 'span'>\r\n                  <Link style = {menuStyle} to = '/'>Home</Link>\r\n                </Nav.Link>\r\n                <Nav.Link href = '#' as = 'span'>\r\n                  <Link style = {menuStyle} to = '/users'>Users</Link>\r\n                </Nav.Link>\r\n                <Nav.Link href = '#' as = 'span'>\r\n                  {user\r\n                    ? <em>{user.name} logged in</em>\r\n                    : <Link to = '/login'>login</Link>\r\n                  }&nbsp;&nbsp;\r\n                  {user ? <button onClick = {logOut}>log out</button> : null}\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n        <h1>Blogs</h1>\r\n        <div>\r\n          <Route exact path = '/' render = {() => <Blog\r\n            addLike = {addLike}\r\n            blogs = {blogs}\r\n            addBlog = {addBlog}\r\n            title = {title}\r\n            author = {author}\r\n            url = {url}\r\n            likes = {likes}\r\n            blogFormRef = {blogFormRef}\r\n          />\r\n          } />\r\n\r\n          <Route exact path = '/users' render = {() => <Users\r\n            users = {users}\r\n          />} />\r\n          <Route exact path = '/users/:id' render = {({ match }) =>\r\n            <UserBlogs userId = {match.params.id} user = {user} blogs = {blogs}\r\n              users = {users} />\r\n          }\r\n          />\r\n          <Route exact path = '/blogs/:id' render = {({ match }) =>\r\n            <Blogs\r\n              id = {match.params.id}\r\n              user = {user}\r\n              blogs = {blogs}\r\n              addLike = {addLike}\r\n              removeBlog = {removeBlog}\r\n            />\r\n          } />\r\n          <Route exact path = '/login' render = {() =>\r\n            <Login\r\n              user = {user}\r\n              handleLogin = {handleLogin}\r\n              username = {username}\r\n              password = {salasana}\r\n            />} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Notification = (props) => {\r\n  let msgType\r\n\r\n  const message = props.msg === null ?\r\n    props.errMsg : props.msg\r\n\r\n  if(props.errMsg !== null){\r\n    msgType = 'err'\r\n  }\r\n  else if(props.errMsg === null && props.msg !== null){\r\n    msgType = 'message'\r\n  }\r\n  else{\r\n    msgType = ''\r\n  }\r\n\r\n  return <div className = {msgType}>\r\n    {message}\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    msg: state.message,\r\n    errMsg: state.errMessage\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Notification)","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const cleanField = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return{\r\n    type,\r\n    value,\r\n    onChange,\r\n    cleanField\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport blogService from './services/blogs'\r\nimport './index.css'\r\nimport Menu from './components/Menu'\r\nimport Notification from './components/Notification'\r\nimport { notificationMessage } from './reducers/messages/notificationReducer'\r\nimport { errorMessage } from './reducers/messages/errorReducer'\r\nimport { initializeBlogs, like, addNewBlog, removeBlog } from './reducers/blogReducer'\r\nimport { initializeUsers } from './reducers/userReducer'\r\nimport { logInUser, logOutUser, setUser } from './reducers/loginReducer'\r\nimport { useField } from './hooks'\r\n\r\nconst App = (props) => {\r\n  const username = useField('text')\r\n  const salasana = useField('password')\r\n  const title = useField('text')\r\n  const author = useField('text')\r\n  const url = useField('text')\r\n  const likes = useField('text')\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    props.initializeBlogs()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    props.initializeUsers()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if(loggedUserJSON){\r\n      const user = JSON.parse(loggedUserJSON)\r\n      if(user !== undefined && user !== null){\r\n        props.setUser(user)\r\n        blogService.setToken(user.token)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const removeHandler = (item) => {\r\n    try{\r\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\r\n        props.removeBlog(item)\r\n        props.notificationMessage(`Blog '${item.title}' is removed`, 5)\r\n      }\r\n    }catch(exception){\r\n      console.log('Error:', exception)\r\n    }\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try{\r\n      await props.logInUser(username.value, salasana.value)\r\n      props.notificationMessage('You are logged in succesfully', 5)\r\n      username.cleanField()\r\n      salasana.cleanField()\r\n    }catch(exception){\r\n      username.cleanField()\r\n      salasana.cleanField()\r\n      props.errorMessage('Wrong username or password!', 5)\r\n    }\r\n  }\r\n\r\n  const addBlog = async (event) => {\r\n    event.preventDefault()\r\n    blogFormRef.current.toggleVisibility()\r\n    const blogObject = {\r\n      title: title.value,\r\n      author: author.value,\r\n      url: url.value,\r\n      likes: likes.value\r\n    }\r\n\r\n    props.addNewBlog(blogObject)\r\n\r\n    title.cleanField()\r\n    author.cleanField()\r\n    url.cleanField()\r\n    likes.cleanField()\r\n\r\n    props.notificationMessage(`New Blog '${blogObject.title}' is added`, 5)\r\n  }\r\n\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    blogService.removeToken()\r\n    props.logOutUser()\r\n  }\r\n\r\n  const addLike = (likeBlog) => {\r\n    props.like(props.blogs, likeBlog)\r\n    props.notificationMessage('You added like to the blog!', 5)\r\n  }\r\n\r\n  return (\r\n    <div className = 'container'>\r\n      <Notification />\r\n      <div>\r\n        <Menu\r\n          users = {props.users}\r\n          blogs = {props.blogs}\r\n          user = {props.user}\r\n          logOut = {logOut}\r\n          addBlog = {addBlog}\r\n          title = {title}\r\n          author = {author}\r\n          url = {url}\r\n          likes = {likes}\r\n          blogFormRef = {blogFormRef}\r\n          addLike = {addLike}\r\n          removeBlog = {removeHandler}\r\n          handleLogin = {handleLogin}\r\n          username = {username}\r\n          salasana = {salasana}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    blogs: state.blogs,\r\n    message: state.message,\r\n    errMessage: state.errMessage,\r\n    user: state.user,\r\n    users: state.users\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logInUser,\r\n  logOutUser,\r\n  setUser,\r\n  initializeBlogs,\r\n  initializeUsers,\r\n  like,\r\n  addNewBlog,\r\n  removeBlog,\r\n  notificationMessage,\r\n  errorMessage\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(App)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}